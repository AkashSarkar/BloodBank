import { KnownPlatform, ResourcesConfig } from '../../definitions';
/**
 * Get orientation information from the Json structure of Config.xml
 */
export declare function getOrientationFromConfigJson(configJson: any): string | undefined;
export declare function getPlatformEngine(configJson: any, platform: string): any;
/**
 * Add provided images to the platform node of the Json structure of Config.xml
 */
export declare function addPlatformImagesToConfigJson(configJson: any, platform: KnownPlatform, images: ResourcesConfig): any;
/**
 * Update splashscreen preferences within the provided Json structure of Config.xml
 */
export declare function addSplashScreenPreferencesToConfigJson(configJson: any): any;
/**
 * Read the project's config.xml and convert it to Json.
 */
export declare function parseConfigXmlToJson(projectDir: string): Promise<any>;
/**
 * Convert provided Json to XML and write to the project's config.xml file.
 */
export declare function writeConfigXml(projectDir: string, configJson: any): Promise<void>;
/**
 * Update config.xml content src to be a dev server url. As part of this
 * backup the original content src for a reset to occur at a later time.
 */
export declare function writeConfigXmlContentSrc(projectDir: string, devServerUrl: string): Promise<void>;
/**
 * Set config.xml src url back to its original url
 */
export declare function resetConfigXmlContentSrc(projectDir: string): Promise<void>;

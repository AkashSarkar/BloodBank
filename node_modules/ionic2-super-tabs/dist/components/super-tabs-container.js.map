{"version":3,"sources":["../../src/components/super-tabs-container.ts"],"names":[],"mappings":"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","file":"super-tabs-container.js","sourceRoot":"","sourcesContent":["import {\n  Component, Renderer2, ElementRef, Input, Output, EventEmitter, ViewChild, ViewEncapsulation,\n  AfterViewInit, OnDestroy, NgZone\n} from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { SuperTabsPanGesture } from '../super-tabs-pan-gesture';\nimport { SuperTabsConfig } from './super-tabs';\n\n\nexport class SuperTabsContainer implements AfterViewInit, OnDestroy {\n\n  /**\n   * Component configuration\n   * @type {SuperTabsConfig}\n   */\n  \n  config: SuperTabsConfig;\n\n  /**\n   * Number of tabs\n   * @type {number}\n   */\n  \n  tabsCount: number = 0;\n\n  /**\n   * Selected tab index\n   * @type {number}\n   */\n  \n  selectedTabIndex: number;\n\n  /**\n   * Notifies when a tab is selected\n   * @type {EventEmitter<Object>}\n   */\n  \n  tabSelect: EventEmitter<{ index: number; changed: boolean; }> = new EventEmitter<{ index: number; changed: boolean; }>();\n\n  /**\n   * Notifies when the container is being dragged\n   * @type {EventEmitter<TouchEvent>}\n   */\n  \n  onDrag: EventEmitter<TouchEvent> = new EventEmitter<TouchEvent>();\n\n  // View bindings\n\n  /**\n   * Container position\n   * @type {number}\n   */\n  containerPosition: number = 0;\n\n  // View children\n\n  /**\n   * The container wrapping all the tabs\n   */\n  \n  container: ElementRef;\n\n  /**\n   * Single tab width\n   * @type {number}\n   */\n  tabWidth: number = 0;\n\n  /**\n   * Container width (sum of tab widths)\n   * @type {number}\n   */\n  containerWidth: number = 0;\n\n\n  // Animation stuff\n\n  /**\n   * Minimum position on x-axis that the container can be at\n   */\n  private minPosX: number;\n\n  /**\n   * Maximum position on x-axis that the container can be at\n   */\n  private maxPosX: number;\n\n  /**\n   * Pan gesture controller\n   */\n  private gesture: SuperTabsPanGesture;\n\n  /**\n   * Boolean indicating whether swiping is globally enabled\n   * @type {boolean}\n   */\n  private globalSwipeEnabled: boolean = true;\n\n  /**\n   * Set of booleans to indicate whether swiping is enabled on each tab\n   * @type {{}}\n   */\n  private swipeEnabledPerTab: {[index: number]: boolean} = {};\n\n  constructor(\n    private el: ElementRef,\n    private rnd: Renderer2,\n    private plt: Platform,\n    private ngZone: NgZone\n  ) {}\n\n  ngAfterViewInit() {\n    this.init();\n  }\n\n  ngOnDestroy() {\n    this.gesture && this.gesture.destroy();\n  }\n\n  /**\n   * Enable or disable swiping globally\n   * @param enable {boolean} set to true to enable\n   */\n  enableTabsSwipe(enable: boolean) {\n    this.globalSwipeEnabled = enable;\n  }\n\n  /**\n   * Enable or disable swiping when a tab is selected\n   * @param tabIndex {number} tab index\n   * @param enable {boolean} set to true to enable\n   */\n  enableTabSwipe(tabIndex: number, enable: boolean) {\n    this.swipeEnabledPerTab[tabIndex] = enable;\n  }\n\n  refreshDimensions() {\n    this.calculateContainerWidth();\n    this.setContainerWidth();\n    this.refreshMinMax();\n  }\n\n  getNativeElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n\n  private init() {\n\n    this.refreshDimensions();\n\n    this.gesture = new SuperTabsPanGesture(this.plt, this.container.nativeElement, this.config, this.rnd);\n\n    this.gesture.onMove = (delta: number) => {\n      if (this.globalSwipeEnabled === false) return;\n      if (this.swipeEnabledPerTab[this.selectedTabIndex] === false) return;\n      if ((this.containerPosition === this.maxPosX && delta >= 0) || (this.containerPosition === this.minPosX && delta <= 0)) return;\n      this.containerPosition += delta;\n      this.plt.raf(() => {\n        this.onDrag.emit();\n        this.moveContainer();\n      })\n    };\n\n    this.gesture.onEnd = (shortSwipe: boolean, shortSwipeDelta?: number) => {\n      if (this.globalSwipeEnabled === false) return;\n      if (this.swipeEnabledPerTab[this.selectedTabIndex] === false) return;\n\n      // get tab index based on container position\n      let tabIndex = Math.round(this.containerPosition / this.tabWidth);\n\n      // handle short swipes\n      // only short swipe if we didn't change tab already in this gesture\n      (tabIndex === this.selectedTabIndex) && shortSwipe && ((shortSwipeDelta < 0 && tabIndex++) || (shortSwipeDelta > 0 && tabIndex--));\n\n      // get location based on tab index\n      const position = Math.max(this.minPosX, Math.min(this.maxPosX, tabIndex * this.tabWidth));\n\n      tabIndex = position / this.tabWidth;\n\n      // move container if we changed position\n      if (position !== this.containerPosition) {\n        this.plt.raf(() => {\n          this.moveContainer(true, position, () => this.ngZone.run(() => this.setSelectedTab(tabIndex)));\n        })\n      } else this.setSelectedTab(tabIndex);\n\n    };\n  }\n\n  /**\n   * Set the selected tab.\n   * Emits a tabSelect event with the tab index, and a boolean indicating whether the tab changed or not.\n   * @param index {number} tab index\n   */\n  private setSelectedTab(index: number) {\n    this.tabSelect.emit({index, changed: index !== this.selectedTabIndex});\n    this.selectedTabIndex = index;\n  }\n\n  /**\n   * Calculate the container's width.\n   * It's usually the number of tabs x tab width.\n   */\n  private calculateContainerWidth() {\n    this.containerWidth = this.tabWidth * this.tabsCount;\n  }\n\n  /**\n   * Set the container's width via CSS property\n   */\n  private setContainerWidth() {\n    this.rnd.setStyle(this.container.nativeElement, 'width', this.containerWidth + 'px');\n  }\n\n  /**\n   * Slide to a specific tab\n   * @param index {number} tab index\n   * @param [animate=true] {boolean} set to true to animate\n   */\n  slideTo(index: number, animate: boolean = true): void {\n    this.plt.raf(() => this.moveContainer(animate, index * this.tabWidth));\n  }\n\n  /**\n   * Moves the container to a specified position\n   * @param [animate=false] {boolean} set to true to animate\n   * @param [positionX] {number} position on x-axis\n   * @param [callback] callback function to call after the container is moved\n   */\n  private moveContainer(animate: boolean = false, positionX?: number, callback: Function = () => {}) {\n    const el: HTMLElement = this.container.nativeElement;\n\n    if (animate) {\n\n      if (el.style[this.plt.Css.transform].indexOf('all') === -1) {\n        this.rnd.setStyle(el, this.plt.Css.transition, `all ${this.config.transitionDuration}ms ${this.config.transitionEase}`);\n      }\n\n      this.rnd.setStyle(el, this.plt.Css.transform, `translate3d(${-1 * positionX}px, 0, 0)`);\n\n      this.containerPosition = positionX;\n\n    } else {\n\n      if (positionX) {\n        this.containerPosition = positionX;\n      }\n\n      if (el.style[this.plt.Css.transform] !== 'initial') {\n        this.rnd.setStyle(el, this.plt.Css.transition, 'initial');\n      }\n\n      this.containerPosition = Math.max(this.minPosX, Math.min(this.maxPosX, this.containerPosition));\n\n      this.rnd.setStyle(el, this.plt.Css.transform, `translate3d(${-1 * this.containerPosition}px, 0, 0)`);\n\n    }\n    callback();\n  }\n\n  /**\n   * Refresh the min and max positions that the container can be at.\n   * The minimum position is always 0, the maximum position is the number of tabs x tab width.\n   */\n  private refreshMinMax(): void {\n    this.minPosX = 0;\n    this.maxPosX = (this.tabsCount - 1) * this.tabWidth;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'super-tabs-container',\n  template: '<div #container><ng-content></ng-content></div>',\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Platform, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'tabsCount': [{ type: Input },],\n'selectedTabIndex': [{ type: Input },],\n'tabSelect': [{ type: Output },],\n'onDrag': [{ type: Output },],\n'container': [{ type: ViewChild, args: ['container', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}